rm -f main_src/main.o src/bptree.o src/buffer_manager.o src/page.o src/file_manager.o src/file_api.o src/dbms_api.o src/table_manager.o lib/* tests/test.o builds/*
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -c -o src/bptree.o src/bptree.cc
rm -f main_src/main.o src/bptree.o src/page.o src/file_manager.o src/file_api.o src/dbms_api.o lib/* tests/test.o builds/*
rm -f main_src/main.o src/bptree.o src/buffer_manager.o src/page.o src/file_manager.o src/file_api.o src/dbms_api.o src/table_manager.o lib/* tests/test.o builds/*
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -c -o src/bptree.o src/bptree.cc
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -c -o src/buffer_manager.o src/buffer_manager.cc
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -c -o src/page.o src/page.cc
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -c -o src/file_manager.o src/file_manager.cc
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -c -o src/file_api.o src/file_api.cc
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -c -o src/dbms_api.o src/dbms_api.cc
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -c -o src/table_manager.o src/table_manager.cc
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -c -o tests/test.o tests/test.cc
mkdir -p builds/
mkdir -p lib/
make static_library
make[1]: Entering directory '/home/dodo/github/2020_ite2038_2019027192/project3'
ar cr lib/libbpt.a src/bptree.o src/buffer_manager.o src/page.o src/file_manager.o src/file_api.o src/dbms_api.o src/table_manager.o
make[1]: Leaving directory '/home/dodo/github/2020_ite2038_2019027192/project3'
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -o builds/test src/bptree.o src/buffer_manager.o src/page.o src/file_manager.o src/file_api.o src/dbms_api.o src/table_manager.o tests/test.o -L lib/ -lbpt
rm -f main_src/main.o src/bptree.o src/buffer_manager.o src/page.o src/file_manager.o src/file_api.o src/dbms_api.o src/table_manager.o lib/* tests/test.o builds/*
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -c -o src/bptree.o src/bptree.cc
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -c -o src/buffer_manager.o src/buffer_manager.cc
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -c -o src/page.o src/page.cc
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -c -o src/file_manager.o src/file_manager.cc
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -c -o src/file_api.o src/file_api.cc
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -c -o src/dbms_api.o src/dbms_api.cc
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -c -o src/table_manager.o src/table_manager.cc
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -c -o tests/test.o tests/test.cc
mkdir -p builds/
mkdir -p lib/
make static_library
make[1]: Entering directory '/home/dodo/github/2020_ite2038_2019027192/project3'
ar cr lib/libbpt.a src/bptree.o src/buffer_manager.o src/page.o src/file_manager.o src/file_api.o src/dbms_api.o src/table_manager.o
make[1]: Leaving directory '/home/dodo/github/2020_ite2038_2019027192/project3'
g++-7 -g -std=c++17 -fPIC -I include/ -Wall -Werror -o builds/test src/bptree.o src/buffer_manager.o src/page.o src/file_manager.o src/file_api.o src/dbms_api.o src/table_manager.o tests/test.o -L lib/ -lbpt
[0| test pod START]
  [is_standard_layout std::array]... success
  [is_standard_layout HeaderPageHeader]... success
  [is_standard_layout NodePageHeader]... success
  [is_standard_layout FreePageHeader]... success
  [is_standard_layout page_t]... success
  [is_standard_layout Record]... success
  [is_standard_layout Internal]... success
  [is_standard_layout Records]... success
  [is_standard_layout Internals]... success
  [is_trivial std::array]... success
  [is_trivial HeaderPageHeader]... success
  [is_trivial NodePageHeader]... success
  [is_trivial FreePageHeader]... success
  [is_trivial page_t]... success
  [is_trivial Record]... success
  [is_trivial Internal]... success
  [is_trivial Records]... success
  [is_trivial Internals]... success
[success: 18 / 18]
[0| test pod END]

[1| file_manager START]
  [FileManager]... success
  [FileManager::open]... success
  [FileManager Page r/w]... success
  [FileManager Many Page]... success
  [FileManager free many]... success
[success: 5 / 5]
[1| file_manager END]

[2| table START]
[success: 0 / 0]
[2| table END]

[3| bpt START]
  [BPTree random number insert many]...1
create call
index: 0
update: mru:-1, lru: -1, prev: -1, next: -1
pagenum: 1, result: 0
update: mru:0, lru: 0, prev: -1, next: -1
put start. pagenum: 1, mru: 0, lru: 0
update: mru:0, lru: 0, prev: 0, next: 0
2
index: 0
update: mru:0, lru: 0, prev: -1, next: -1
get start. pagenum: 1, mru: 0, lru: 0
update: mru:0, lru: 0, prev: 0, next: 0
get start. pagenum: 0, mru: 0, lru: 0
[31m[-] bool BufferController::unlink_frame(int, frame_t&)
    statement: mru == buffer_index
    logical error detected: mru: 0, buffer_index: 1
[0m[31m[-] bool BufferController::get(int, pagenum_t, frame_t&)
    statement: unlink_frame(index, frame)
[31m[-] bool BPTree::load_node(nodeId_t, node_t&)
    statement: manager.load(node_id, node)
    load node failure: 0
[0m[31m[-] bool BPTree::find_leaf(keyType, node_tuple&)
    statement: load_node(node.id = (idx == -1) ? node.node.leftmost() : node.node.get<internal_t>(idx).node_id, node.node)
get start. pagenum: 1, mru: 0, lru: 0
update: mru:0, lru: 0, prev: 0, next: 0
get start. pagenum: 0, mru: 0, lru: 0
[31m[-] bool BufferController::unlink_frame(int, frame_t&)
    statement: mru == buffer_index
    logical error detected: mru: 0, buffer_index: 1
[0m[31m[-] bool BufferController::get(int, pagenum_t, frame_t&)
    statement: unlink_frame(index, frame)
[31m[-] bool BPTree::load_node(nodeId_t, node_t&)
    statement: manager.load(node_id, node)
    load node failure: 0
[0m[31m[-] bool BPTree::find_leaf(keyType, node_tuple&)
    statement: load_node(node.id = (idx == -1) ? node.node.leftmost() : node.node.get<internal_t>(idx).node_id, node.node)
[31m[-] bool BPTree::insert(keyType, const valType&)
    statement: find_leaf(key, leaf)
 [ (tree.insert(a, v) != true ]
  [BPTree find key]...get start. pagenum: 1, mru: 0, lru: 0
update: mru:0, lru: 0, prev: 0, next: 0
get start. pagenum: 0, mru: 0, lru: 0
[31m[-] bool BufferController::unlink_frame(int, frame_t&)
    statement: mru == buffer_index
    logical error detected: mru: 0, buffer_index: 1
[0m[31m[-] bool BufferController::get(int, pagenum_t, frame_t&)
    statement: unlink_frame(index, frame)
[31m[-] bool BPTree::load_node(nodeId_t, node_t&)
    statement: manager.load(node_id, node)
    load node failure: 0
[0m[31m[-] bool BPTree::find_leaf(keyType, node_tuple&)
    statement: load_node(node.id = (idx == -1) ? node.node.leftmost() : node.node.get<internal_t>(idx).node_id, node.node)
 [ (tree.find(i, record) != true ]
  [BPTree delete half - 1]...get start. pagenum: 1, mru: 0, lru: 0
update: mru:0, lru: 0, prev: 0, next: 0
get start. pagenum: 0, mru: 0, lru: 0
[31m[-] bool BufferController::unlink_frame(int, frame_t&)
    statement: mru == buffer_index
    logical error detected: mru: 0, buffer_index: 1
[0m[31m[-] bool BufferController::get(int, pagenum_t, frame_t&)
    statement: unlink_frame(index, frame)
[31m[-] bool BPTree::load_node(nodeId_t, node_t&)
    statement: manager.load(node_id, node)
    load node failure: 0
[0m[31m[-] bool BPTree::find_leaf(keyType, node_tuple&)
    statement: load_node(node.id = (idx == -1) ? node.node.leftmost() : node.node.get<internal_t>(idx).node_id, node.node)
 [ (tree.delete_key(i) != true ]
get start. pagenum: 1, mru: 0, lru: 0
update: mru:0, lru: 0, prev: 0, next: 0
get start. pagenum: 0, mru: 0, lru: 0
[31m[-] bool BufferController::unlink_frame(int, frame_t&)
    statement: mru == buffer_index
    logical error detected: mru: 0, buffer_index: 1
[0m[31m[-] bool BufferController::get(int, pagenum_t, frame_t&)
    statement: unlink_frame(index, frame)
[31m[-] bool BPTree::load_node(nodeId_t, node_t&)
    statement: manager.load(node_id, node)
    load node failure: 0
[0m[31m[-] bool BPTree::find_leaf(keyType, node_tuple&)
    statement: load_node(node.id = (idx == -1) ? node.node.leftmost() : node.node.get<internal_t>(idx).node_id, node.node)
 [ (tree.find(i, record) != true ]
  [BPTree delete half - 2]...get start. pagenum: 1, mru: 0, lru: 0
update: mru:0, lru: 0, prev: 0, next: 0
get start. pagenum: 0, mru: 0, lru: 0
[31m[-] bool BufferController::unlink_frame(int, frame_t&)
    statement: mru == buffer_index
    logical error detected: mru: 0, buffer_index: 1
[0m[31m[-] bool BufferController::get(int, pagenum_t, frame_t&)
    statement: unlink_frame(index, frame)
[31m[-] bool BPTree::load_node(nodeId_t, node_t&)
    statement: manager.load(node_id, node)
    load node failure: 0
[0m[31m[-] bool BPTree::find_leaf(keyType, node_tuple&)
    statement: load_node(node.id = (idx == -1) ? node.node.leftmost() : node.node.get<internal_t>(idx).node_id, node.node)
 [ (tree.delete_key(i) != true ]
  [BPTree insert after delete]...get start. pagenum: 1, mru: 0, lru: 0
update: mru:0, lru: 0, prev: 0, next: 0
get start. pagenum: 0, mru: 0, lru: 0
[31m[-] bool BufferController::unlink_frame(int, frame_t&)
    statement: mru == buffer_index
    logical error detected: mru: 0, buffer_index: 1
[0m[31m[-] bool BufferController::get(int, pagenum_t, frame_t&)
    statement: unlink_frame(index, frame)
[31m[-] bool BPTree::load_node(nodeId_t, node_t&)
    statement: manager.load(node_id, node)
    load node failure: 0
[0m[31m[-] bool BPTree::find_leaf(keyType, node_tuple&)
    statement: load_node(node.id = (idx == -1) ? node.node.leftmost() : node.node.get<internal_t>(idx).node_id, node.node)
get start. pagenum: 1, mru: 0, lru: 0
update: mru:0, lru: 0, prev: 0, next: 0
get start. pagenum: 0, mru: 0, lru: 0
[31m[-] bool BufferController::unlink_frame(int, frame_t&)
    statement: mru == buffer_index
    logical error detected: mru: 0, buffer_index: 1
[0m[31m[-] bool BufferController::get(int, pagenum_t, frame_t&)
    statement: unlink_frame(index, frame)
[31m[-] bool BPTree::load_node(nodeId_t, node_t&)
    statement: manager.load(node_id, node)
    load node failure: 0
[0m[31m[-] bool BPTree::find_leaf(keyType, node_tuple&)
    statement: load_node(node.id = (idx == -1) ? node.node.leftmost() : node.node.get<internal_t>(idx).node_id, node.node)
[31m[-] bool BPTree::insert(keyType, const valType&)
    statement: find_leaf(key, leaf)
 [ (tree.insert(i, v) != true ]
  [BPTree find after delete and insert]...get start. pagenum: 1, mru: 0, lru: 0
update: mru:0, lru: 0, prev: 0, next: 0
get start. pagenum: 0, mru: 0, lru: 0
[31m[-] bool BufferController::unlink_frame(int, frame_t&)
    statement: mru == buffer_index
    logical error detected: mru: 0, buffer_index: 1
[0m[31m[-] bool BufferController::get(int, pagenum_t, frame_t&)
    statement: unlink_frame(index, frame)
[31m[-] bool BPTree::load_node(nodeId_t, node_t&)
    statement: manager.load(node_id, node)
    load node failure: 0
[0m[31m[-] bool BPTree::find_leaf(keyType, node_tuple&)
    statement: load_node(node.id = (idx == -1) ? node.node.leftmost() : node.node.get<internal_t>(idx).node_id, node.node)
 [ (tree.find(i, record) != true ]
  [BPTree delete all]...get start. pagenum: 1, mru: 0, lru: 0
update: mru:0, lru: 0, prev: 0, next: 0
get start. pagenum: 0, mru: 0, lru: 0
[31m[-] bool BufferController::unlink_frame(int, frame_t&)
    statement: mru == buffer_index
    logical error detected: mru: 0, buffer_index: 1
[0m[31m[-] bool BufferController::get(int, pagenum_t, frame_t&)
    statement: unlink_frame(index, frame)
[31m[-] bool BPTree::load_node(nodeId_t, node_t&)
    statement: manager.load(node_id, node)
    load node failure: 0
[0m[31m[-] bool BPTree::find_leaf(keyType, node_tuple&)
    statement: load_node(node.id = (idx == -1) ? node.node.leftmost() : node.node.get<internal_t>(idx).node_id, node.node)
 [ (tree.delete_key(i) != true ]
[success: 0 / 7]
[3| bpt END]

[4| test_file START]
[success: 0 / 0]
[4| test_file END]

[5| TESTS START]
  [CHECK_TRUE]... success
  [CHECK_FALSE]... success
  [CHECK_VALUE]... success
  [CHECK_NULLPTR]... success
[success: 4 / 4]
[5| TESTS END]


[Tests are over] success: 27 / 34
rm -f main_src/main.o src/bptree.o src/page.o src/file_manager.o src/file_api.o src/dbms_api.o lib/* tests/test.o builds/*
